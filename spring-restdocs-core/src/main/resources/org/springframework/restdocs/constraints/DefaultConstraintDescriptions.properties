jakarta.validation.constraints.AssertFalse.description=Must be false
jakarta.validation.constraints.AssertTrue.description=Must be true
jakarta.validation.constraints.DecimalMax.description=Must be at most ${value}
jakarta.validation.constraints.DecimalMin.description=Must be at least ${value}
jakarta.validation.constraints.Digits.description=Must have at most ${integer} integral digits and ${fraction} fractional digits
jakarta.validation.constraints.Email.description=Must be a well-formed email address
jakarta.validation.constraints.Future.description=Must be in the future
jakarta.validation.constraints.FutureOrPresent.description=Must be in the future or the present
jakarta.validation.constraints.Max.description=Must be at most ${value}
jakarta.validation.constraints.Min.description=Must be at least ${value}
jakarta.validation.constraints.Negative.description=Must be negative
jakarta.validation.constraints.NegativeOrZero.description=Must be negative or zero
jakarta.validation.constraints.NotBlank.description=Must not be blank
jakarta.validation.constraints.NotEmpty.description=Must not be empty
jakarta.validation.constraints.NotNull.description=Must not be null
jakarta.validation.constraints.Null.description=Must be null
jakarta.validation.constraints.Past.description=Must be in the past
jakarta.validation.constraints.PastOrPresent.description=Must be in the past or the present
jakarta.validation.constraints.Pattern.description=Must match the regular expression `${regexp}`
jakarta.validation.constraints.Positive.description=Must be positive
jakarta.validation.constraints.PositiveOrZero.description=Must be positive or zero
jakarta.validation.constraints.Size.description=Size must be between ${min} and ${max} inclusive
org.hibernate.validator.constraints.CodePointLength.description=Code point length must be between ${min} and ${max} inclusive
org.hibernate.validator.constraints.CreditCardNumber.description=Must be a well-formed credit card number
org.hibernate.validator.constraints.Currency.description=Must be in an accepted currency unit (${value})
org.hibernate.validator.constraints.EAN.description=Must be a well-formed ${type} number
org.hibernate.validator.constraints.Email.description=Must be a well-formed email address
org.hibernate.validator.constraints.Length.description=Length must be between ${min} and ${max} inclusive
org.hibernate.validator.constraints.LuhnCheck.description=Must pass the Luhn Modulo 10 checksum algorithm
org.hibernate.validator.constraints.Mod10Check.description=Must pass the Mod10 checksum algorithm
org.hibernate.validator.constraints.Mod11Check.description=Must pass the Mod11 checksum algorithm
org.hibernate.validator.constraints.NotBlank.description=Must not be blank
org.hibernate.validator.constraints.NotEmpty.description=Must not be empty
org.hibernate.validator.constraints.Range.description=Must be at least ${min} and at most ${max}
org.hibernate.validator.constraints.URL.description=Must be a well-formed URL